name: validate
on:
  push:
    branches-ignore: [ 'main' ]

jobs:

  TypeCheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        id: cache-dependencies
        with:
          python-version: '3.11'
          cache: 'pipenv'
          cache-dependency-path: |
            Pipfile.lock

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: pipenv install -d --deploy

      - name: Check types
        run: pipenv run check-types

  Test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        id: cache-dependencies
        with:
          python-version: '3.11'
          cache: 'pipenv'
          cache-dependency-path: |
            Pipfile.lock

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: pipenv install -d --deploy

      - name: Format
        run: pipenv run format

      - name: Lint
        run: pipenv run lint

      - name: Test
        run: pipenv run test

  Build_Package:
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]

    runs-on: ${{ matrix.os }}

    needs: [TypeCheck, Test]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        id: cache-dependencies
        with:
          python-version: '3.11'
          cache: 'pipenv'
          cache-dependency-path: |
            Pipfile.lock

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: pipenv install -d --deploy

      - name: Build Executable
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: main
          script-name: surfaid_namescan.py
          onefile: false

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }} Build
          path: |
            build/*.exe
            build/*.bin
            build/*.app/**/*